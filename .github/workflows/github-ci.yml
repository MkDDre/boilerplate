name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  api-test:
    name: API Unit Tests
    runs-on: ubuntu-latest
    container: maven:3.9.9-amazoncorretto-21

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('api/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run API tests
        run: |
          cd api
          mvn clean test

      - name: Upload API reports
        uses: actions/upload-artifact@v3
        with:
          name: api-test-reports
          path: |
            api/target/reports/
            api/target/site/
            api/target/surefire-reports/

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    container: node:20

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install and test frontend
        run: |
          cd frontend
          npm install
          npm run lint
          npm run coverage

      - name: Upload frontend coverage
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage
          path: frontend/coverage/

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.50.0-jammy

    services:
      docker:
        image: docker:dind
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies and start services
        run: |
          apt update -y
          wget https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.deb
          apt install ./jdk-21_linux-x64_bin.deb
          apt install -y maven docker-compose-v2
          docker compose -f api/docker-compose.yaml up --build -d
          sleep 5
          cd api
          mvn clean spring-boot:run -Dspring-boot.run.profiles=test &
          sleep 30
          cd ../frontend
          npm install
          npm run dev &
          sleep 30
          cd ../e2e
          npm install

      - name: Run E2E tests
        run: |
          cd e2e
          npx playwright test

      - name: Upload E2E reports
        uses: actions/upload-artifact@v3
        with:
          name: e2e-playwright-report
          path: |
            e2e/playwright-report/
            e2e/test-results/
