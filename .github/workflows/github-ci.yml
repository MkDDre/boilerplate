stages:
  - test
  - build
  - e2e

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"

api test:
  stage: test
  image: maven:3.9.9-amazoncorretto-21
  cache:
    key:
      files:
        - api/pom.xml
    paths:
      - $CI_PROJECT_DIR/.m2/repository
  script:
    - cd api
    - mvn clean test
  artifacts:
    paths:
      - api/target/reports/
      - api/target/site/
      - api/target/surefire-reports/

frontend test:
  stage: test
  image: node:20-alpine
  cache:
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/node_modules
  script:
    - cd frontend
    - npm ci
    - npm run lint
    - npm run coverage
  artifacts:
    paths:
      - frontend/coverage/

build:
  stage: build
  image: docker:latest
  services:
    - docker:20-dind
  script:
    - docker-compose build

e2e tests:
  stage: e2e
  image: mcr.microsoft.com/playwright:v1.53.1-jammy
  services:
    - docker:20-dind
  variables:
    HOME: /root
    DOCKER_CONFIG: /tmp/.docker
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
  before_script:
    - mkdir -p $DOCKER_CONFIG
    - apt update -y
    - wget https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.deb
    - apt install ./jdk-21_linux-x64_bin.deb
    - apt install -y maven docker-compose
    - docker-compose -f api/docker-compose.yaml up --build -d
    - sleep 5
    - cd api
    - mvn clean spring-boot:run -Dspring-boot.run.profiles=test > spring.log 2>&1 &
    - SERVER_PID=$!
    - sleep 30
    - if ! ps -p $SERVER_PID > /dev/null; then echo "\u274c Spring Boot failed to start"; cat spring.log; exit 1; fi
    - cd ../frontend
    - npm install
    - npm run dev &
    - sleep 30
    - cd ../e2e
    - npm install
  script:
    - npx playwright test
  artifacts:
    paths:
      - e2e/playwright-report/
      - e2e/test-results/
  after_script:
    - docker-compose down
